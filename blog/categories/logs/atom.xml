<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Logs | Will Anderson]]></title>
  <link href="http://willi.am/blog/categories/logs/atom.xml" rel="self"/>
  <link href="http://willi.am/"/>
  <updated>2017-10-05T15:10:59-07:00</updated>
  <id>http://willi.am/</id>
  <author>
    <name><![CDATA[Will Anderson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Adding Timestamps To Arbitrary Logs]]></title>
    <link href="http://willi.am/blog/2017/10/05/adding-timestamps-to-arbitrary-logs/"/>
    <updated>2017-10-05T14:07:03-07:00</updated>
    <id>http://willi.am/blog/2017/10/05/adding-timestamps-to-arbitrary-logs</id>
    <content type="html"><![CDATA[<p>I was recently looking at a log file generated by a cron job and was frustrated to discover that the log didn&rsquo;t have timestamps.
After a little thought, I figured out how to make sure all future logs from that cron job have timestamps.</p>

<p>In my case, the cron job was a Let&rsquo;s Encrypt renewal:</p>

<p><code>/opt/letsencrypt/letsencrypt-auto renew &gt;&gt; /var/log/le-renew.log</code></p>

<p>Since I&rsquo;m not in control of the output of <code>letsencrypt-auto renew</code>, I need to insert the timestamps. Using a Bash <code>while</code> loop solves this easily:</p>

<p><code>/opt/letsencrypt/letsencrypt-auto renew | while read -r l; do echo "$(date) $l"; done &gt;&gt; /var/log/le-renew.log</code></p>

<p>The <code>while -r l</code> reads the output line-by-line into the variable <code>$l</code>, then prints it out, prefixing with the <code>date</code> command.
Then it pipes everything into the same log.</p>

<p>You&rsquo;ll get output like this:</p>

<p><code>
Tue Oct  3 19:01:03 EDT 2017
Tue Oct  3 19:01:03 EDT 2017 -------------------------------------------------------------------------------
Tue Oct  3 19:01:03 EDT 2017 Processing /etc/letsencrypt/renewal/mimic.io.conf
Tue Oct  3 19:01:03 EDT 2017 -------------------------------------------------------------------------------
Tue Oct  3 19:01:03 EDT 2017
Tue Oct  3 19:01:03 EDT 2017 -------------------------------------------------------------------------------
Tue Oct  3 19:01:03 EDT 2017
Tue Oct  3 19:01:03 EDT 2017 The following certs are not due for renewal yet:
Tue Oct  3 19:01:03 EDT 2017 /etc/letsencrypt/live/mimic.io/fullchain.pem (skipped)
Tue Oct  3 19:01:03 EDT 2017 No renewals were attempted.
Tue Oct  3 19:01:03 EDT 2017 -------------------------------------------------------------------------------
Wed Oct  4 19:01:01 EDT 2017 Upgrading certbot-auto 0.18.2 to 0.19.0...
Wed Oct  4 19:01:01 EDT 2017 Replacing certbot-auto...
</code></p>

<p>If you wanted to customize the date format, you could do it like this:</p>

<p><code>
$(date "+%Y-%m-%d %H:%M:%S")
</code></p>

<p>In the cron definition it would look like this:</p>

<p><code>/opt/letsencrypt/letsencrypt-auto renew | while read -r l; do echo "$(date "+%Y-%m-%d %H:%M:%S") $l"; done &gt;&gt; /var/log/le-renew.log</code></p>

<p>If your cron command gets complicated enough, it might be worth moving it to a shell script that you invoke from the cron job.</p>

<p>```</p>

<h1>!/bin/bash</h1>

<p>/opt/letsencrypt/letsencrypt-auto renew | while read -r line; do
  echo &ldquo;$(date &rdquo;+%Y-%m-%d %H:%M:%S") $line"
done >> /var/log/le-renew.log
```</p>

<p>That&rsquo;s basically it&hellip;</p>

<p>You could easily prefix your logs with other things as well, but I&rsquo;ll leave that as an exercise for the reader.</p>
]]></content>
  </entry>
  
</feed>
