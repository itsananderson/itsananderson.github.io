<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Netbeans | Will Anderson]]></title>
  <link href="http://willi.am/blog/categories/netbeans/atom.xml" rel="self"/>
  <link href="http://willi.am/"/>
  <updated>2014-10-12T10:21:08-07:00</updated>
  <id>http://willi.am/</id>
  <author>
    <name><![CDATA[Will Anderson]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Netbeans FTP File Permissions Fix]]></title>
    <link href="http://willi.am/blog/2010/03/14/netbeans-ftp-file-permissions-fix/"/>
    <updated>2010-03-14T22:04:51-07:00</updated>
    <id>http://willi.am/blog/2010/03/14/netbeans-ftp-file-permissions-fix</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been trying out Netbeans' &ldquo;PHP Application from Remote Server&rdquo; feature this weekend. The idea is that when you save a file, it uploads that file to a remote server where it can be run.</p>

<p>The problem I ran into is that when Netbeans uploads that file and overwrites the old version, the permissions on the file change. I did some searching and it sounds like Netbeans doesn&rsquo;t set permissions on the file, which means it just takes the server default. This doesn&rsquo;t make much sense (should keep permissions of previous file) and for me it meant that the permissions were set so low that I couldn&rsquo;t run the PHP scripts I was uploading.</p>

<p>It&rsquo;s simple enough to change the permissions on those files.</p>

<p><code>sh
chmod -R 777 /path/to/files
</code></p>

<p>But you have to run this command <em>every</em> time you make a change. This is a royal pain when you&rsquo;re making a lot of small changes (like when you&rsquo;re trying to track down a bug for example).</p>

<p>One solution might be to try hooking into the ftp server daemon to run that command every time something is committed, but that sounded like too much work. I came up with a better solution.</p>

<p>Instead, I decided to just run that command in a loop. The following scripts runs infinitely (until execution is stopped) and waits 1 second, then runs the permission command.</p>

<p>```sh
while (true); do</p>

<pre><code>sleep 1
chmod -R 777 /path/to/files
</code></pre>

<p>done;
```</p>

<p>If you want to be able to do anything else in the command line while this is running, it&rsquo;s probably a good idea to run it in a screen.</p>

<p>Also, you can end the execution of this script with CTRL+C. Otherwise it will continue executing forever.</p>
]]></content>
  </entry>
  
</feed>
